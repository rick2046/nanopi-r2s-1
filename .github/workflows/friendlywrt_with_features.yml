name: FwF


on:
  repository_dispatch:
  push:
    branches: 
      - master
    paths:
      - '.github/workflows/friendlywrt_with_features.yml'
      - 'features.seed'
      - '*.sh'
      - 'luci-app-r2sflasher'
  schedule:
    - cron: '38 06 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.SEC_TOKEN }}
      sec_token: ${{ secrets.SEC_TOKEN }}

    steps:
      - name: Setup timezone
        uses: zcong1993/setup-timezone@master
        with:
          timezone: Asia/Shanghai

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master
          fetch-depth: 0
          token: ${{ env.sec_token }}

      - name: Init Env
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          . init_env.sh
      
      - name: Repo Hash
        run: |
          ./set_repo_hash.sh Builder
      
      - name: Friendlywrt Source
        run: |
          . friendlywrt_source.sh

      - name: Change Feeds to Lean
        run: |
          cd friendlywrt-rk3328
          git clone https://github.com/coolsnowwolf/lede
          cd lede
          ../../set_repo_hash.sh Lean
          cd ../friendlywrt
          cp -r ../lede/package/lean package/
          rm -rf package/network/config/firewall
          cp -r ../lede/package/network/config/firewall package/network/config/
          sed -i 's/^src-git luci.*/src-git luci https:\/\/github.com\/coolsnowwolf\/luci/' feeds.conf.default
          sed -i 's/^src-git packages.*/src-git packages https:\/\/github.com\/coolsnowwolf\/packages/' feeds.conf.default
          ../../set_repo_hash.sh LeanLuci https://github.com/coolsnowwolf/luci.git
          ../../set_repo_hash.sh LeanPackage https://github.com/coolsnowwolf/packages.git
        
      - name: Add Packages to Lean
        run: |
          . add_packages_to_lean.sh

      - name: Add SSRP
        run: |
          cd friendlywrt-rk3328/friendlywrt/package
          git clone https://github.com/fw876/helloworld.git
          cd helloworld
          ../../../../set_repo_hash.sh SSRP

      - name: Install Openwrt Libs
        run: |
          git config --global user.email "action@github.com" && git config --global user.name "GitHub Action"
          cd friendlywrt-rk3328
          git clone https://github.com/openwrt/openwrt
          rm -rf friendlywrt/package/libs
          cp -r openwrt/package/libs friendlywrt/package/

      - name: Use Chuck's Kernel
        run: |
          cd friendlywrt-rk3328
          rm -rf kernel
          git clone --depth=1 https://github.com/fanck0605/friendlywrt-kernel.git kernel
          cd kernel
          ../../set_repo_hash.sh Kernel
          cd ../openwrt
          ../../set_repo_hash.sh OpenWrt
          ./scripts/patch-kernel.sh ../kernel target/linux/generic/backport-5.4
          ./scripts/patch-kernel.sh ../kernel target/linux/generic/pending-5.4
          ./scripts/patch-kernel.sh ../kernel target/linux/generic/hack-5.4
          ./scripts/patch-kernel.sh ../kernel target/linux/octeontx/patches-5.4
          cp -a ./target/linux/generic/files/* ../kernel/
          cd ../kernel
          wget -O net/netfilter/xt_FULLCONENAT.c https://raw.githubusercontent.com/Chion82/netfilter-full-cone-nat/master/xt_FULLCONENAT.c
          wget -O ../fullcone_nat.patch https://github.com/fanck0605/nanopi-r2s/raw/openwrt-lienol/patches/001-kernel-add-full_cone_nat.patch
          git apply ../fullcone_nat.patch
          # cd ..
          # curl -s https://api.github.com/repos/fanck0605/nanopi-r2s/releases/latest | jq ".zipball_url" | cut -d '"' -f 2 | wget -O fanck.zip -qi -
          # kernelconfig=$(unzip -Z -1 fanck.zip | grep "nanopi-r2_linux_defconfig")
          # if [ "$kernelconfig" == "" ]; then
          #   echo "kernelconfig not fount"
          #   exit 1
          # fi
          # unzip fanck.zip $kernelconfig
          # mv $kernelconfig kernel/arch/arm64/configs/nanopi-r2_linux_defconfig
          # rm fanck.zip
      
      - name: Change Log
        id: changelog
        run: |
          git config --global user.email "action@github.com" && git config --global user.name "GitHub Action"
          ./changelog.sh FwF

      - name: Update Feeds
        if: steps.changelog.outputs.changelog != ''
        run: |
          cd friendlywrt-rk3328/friendlywrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a
        
      - name: Install Mods
        if: steps.changelog.outputs.changelog != ''
        run: |
          cd friendlywrt-rk3328
          sed -i '/Load Average/i\\t\t<tr><td width="33%"><%:CPU Temperature%></td><td><%=luci.sys.exec("cut -c1-2 /sys/class/thermal/thermal_zone0/temp")%> â„ƒ</td></tr>' friendlywrt/feeds/luci/modules/luci-mod-admin-full/luasrc/view/admin_status/index.htm
          sed -i 's/pcdata(boardinfo.system or "?")/"ARMv8"/' friendlywrt/feeds/luci/modules/luci-mod-admin-full/luasrc/view/admin_status/index.htm
          sed -i 's/<%=luci.sys.exec("cat \/etc\/bench.log") or " "%>//' friendlywrt/feeds/luci/modules/luci-mod-admin-full/luasrc/view/admin_status/index.htm
          sed -i "/redirect_https/d" friendlywrt/package/network/services/uhttpd/files/uhttpd.config
          sed -i '/luciversion/a \/ ${{ steps.changelog.outputs.buildtag }} by <a href="https://songchenwen.com">scw</a>' friendlywrt/feeds/luci/modules/luci-mod-admin-full/luasrc/view/admin_status/index.htm
          sed -i '/firewall\.user/d' friendlywrt/package/lean/default-settings/files/zzz-default-settings
          cp ../scripts/fw_update.sh friendlywrt/package/base-files/files/usr/bin/fw_update
          cp ../scripts/rom_prepare.sh friendlywrt/package/base-files/files/usr/bin/rom_prepare
          cp ../scripts/check_net.sh friendlywrt/package/base-files/files/usr/bin/check_net
          echo "/usr/bin/check_net" >> friendlywrt/package/base-files/files/root/setup.sh

      - name: Add Temperature to Netdata
        if: steps.changelog.outputs.changelog != ''
        run: |
          cd friendlywrt-rk3328
          mkdir -p friendlywrt/package/base-files/files/usr/lib/netdata/charts.d
          cp ../scripts/temp.chart.sh friendlywrt/package/base-files/files/usr/lib/netdata/charts.d/
          echo "sed -i 's/charts.d = no/charts.d = yes/' /etc/netdata/netdata.conf" >> friendlywrt/package/base-files/files/root/setup.sh
          echo "cp /usr/lib/netdata/conf.d/charts.d.conf /etc/netdata/" >> friendlywrt/package/base-files/files/root/setup.sh
          echo "echo 'temp=yes' >> /etc/netdata/charts.d.conf" >> friendlywrt/package/base-files/files/root/setup.sh
          echo "/etc/init.d/netdata restart" >> friendlywrt/package/base-files/files/root/setup.sh
      
      - name: Add OPKG Feeds
        if: steps.changelog.outputs.changelog != ''
        run: |
          cd friendlywrt-rk3328
          git clone -b src --depth 1 https://github.com/songchenwen/nanopi-r2s-opkg-feeds.git
          mkdir -p friendlywrt/package/base-files/files/etc/opkg/keys/
          cp nanopi-r2s-opkg-feeds/keys/* friendlywrt/package/base-files/files/etc/opkg/keys/
          rm -rf nanopi-r2s-opkg-feeds
          echo "grep -qF 'songchenwen.com' /etc/opkg/customfeeds.conf || echo 'src/gz songchenwen https://nanopi-r2s-opkg-feeds.songchenwen.com/packages' >> /etc/opkg/customfeeds.conf" >> friendlywrt/package/base-files/files/root/setup.sh

      # - name: Unlock CPU 1.5Ghz
      #   run: |
      #     cd friendlywrt-rk3328/kernel
      #     wget https://github.com/armbian/build/raw/master/patch/kernel/rockchip64-dev/RK3328-enable-1512mhz-opp.patch
      #     git apply RK3328-enable-1512mhz-opp.patch
          
      - name: Download Clash Binary
        if: steps.changelog.outputs.changelog != ''
        run: |
          CLASH_VERSION=v0.20.0
          mkdir -p friendlywrt-rk3328/friendlywrt/package/base-files/files/usr/bin
          cd friendlywrt-rk3328/friendlywrt/package/base-files/files/usr/bin
          wget -O clash.gz https://github.com/Dreamacro/clash/releases/download/$CLASH_VERSION/clash-linux-armv8-$CLASH_VERSION.gz
          gunzip clash.gz
          chmod +x clash
          cd ../..
          mkdir -p etc/clash
          cd etc/clash
          wget -O Country.mmdb https://github.com/Dreamacro/maxmind-geoip/releases/latest/download/Country.mmdb

      - name: Install UPX
        if: steps.changelog.outputs.changelog != ''
        run: |
          mkdir -p friendlywrt-rk3328/friendlywrt/staging_dir/host/bin/
          ln -s /usr/bin/upx-ucl friendlywrt-rk3328/friendlywrt/staging_dir/host/bin/upx
  
      - name: Update Target.mk
        if: steps.changelog.outputs.changelog != ''
        run: |
          cd friendlywrt-rk3328/friendlywrt/include
          sed -i 's/dnsmasq /dnsmasq-full default-settings luci /' target.mk

      - name: Build Config
        if: steps.changelog.outputs.changelog != ''
        run: |
          cd friendlywrt-rk3328
          cat configs/config_rk3328 | grep "TARGET" > ../rk3328.config
          cat ../features.seed >> ../rk3328.config
          cat ../rk3328.config > configs/config_rk3328
          cat configs/config_rk3328
      
      - name: Clean src
        if: steps.changelog.outputs.changelog != ''
        run: |
          cd friendlywrt-rk3328
          rm -rf lede
          rm -rf openwrt

      - name: Build Friendlywrt
        if: steps.changelog.outputs.changelog != ''
        run: |
          cd friendlywrt-rk3328
          ./build.sh nanopi_r2s.mk

      # from https://github.com/fanck0605/nanopi_r2s/blob/lean/.github/workflows/main.yml#L87
      - name: Fix FriendlyWrt rootfs owner and group
        if: steps.changelog.outputs.changelog != ''
        run: |
          sudo df -lh
          lodev=$(sudo losetup -f)
          echo "found unused loop dev $lodev"
          sudo losetup -P $lodev friendlywrt-rk3328/out/*.img
          sudo rm -rf /mnt/friendlywrt-tmp
          sudo mkdir -p /mnt/friendlywrt-tmp
          sudo mount ${lodev}p1 /mnt/friendlywrt-tmp
          sudo chown -R root:root /mnt/friendlywrt-tmp
          sudo umount /mnt/friendlywrt-tmp
          sudo losetup -d $lodev
      
      - name: Zip Files
        if: steps.changelog.outputs.changelog != ''
        run: |
          gzip friendlywrt-rk3328/out/*.img

      - name: Assemble Artifact
        if: steps.changelog.outputs.changelog != ''
        id: assemble_artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          cd friendlywrt-rk3328/friendlywrt;./scripts/diffconfig.sh > ../../artifact/config.seed;cd ../../
          mv friendlywrt-rk3328/out/*img* ./artifact/
          cp friendlywrt-rk3328/friendlywrt/.config ./artifact/full.config
          cp friendlywrt-rk3328/friendlywrt/bin/packages/*/scw/luci-app-passwall*.ipk ./artifact/
          cp friendlywrt-rk3328/friendlywrt/bin/packages/*/*/luci-app-r2sflasher*.ipk ./artifact/
          cp friendlywrt-rk3328/friendlywrt/bin/packages/*/*/luci-app-filetransfer*.ipk ./artifact/
          zip -r artifact.zip -j artifact artifact/*
          release_tag=${{ steps.changelog.outputs.buildtag }}
          echo "##[set-output name=release_tag;]$release_tag"

      - name: Create Release
        if: steps.changelog.outputs.changelog != ''
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.assemble_artifact.outputs.release_tag }}
          release_name: ${{ steps.assemble_artifact.outputs.release_tag }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        if: steps.changelog.outputs.changelog != ''
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./artifact.zip
          asset_name: ${{ steps.assemble_artifact.outputs.release_tag }}-ROM.zip
          asset_content_type: application/zip
    
      - name: Push Change Log
        if: steps.changelog.outputs.changelog != ''
        run: |
          git pull --rebase --autostash
          git push
